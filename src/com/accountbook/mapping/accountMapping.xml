<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.accountbook.dao.AccountDao" >

   <resultMap id="accountMap" type="com.accountbook.model.Account" >
	    <id column="id" property="id" jdbcType="VARCHAR" />
	    <result column="user_id" property="userId" jdbcType="VARCHAR" />
	    <result column="book_id" property="bookId" jdbcType="VARCHAR" />
	    <result column="type" property="type" jdbcType="VARCHAR" />
	    
	    <result column="name" property="name" jdbcType="VARCHAR" />
	    <result column="description" property="description" jdbcType="VARCHAR" />
	    <result column="imgs" property="imgs" jdbcType="VARCHAR" />
	    
	    <result column="date_timestamp" property="dateTimestamp" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp"/>
	    <result column="create_timestamp" property="createTimestamp" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp"/>
	    
	    <result column="addr_name" property="addrName" jdbcType="VARCHAR" />
	    <result column="addr" property="addr" jdbcType="VARCHAR" />
	    <result column="addr_lat" property="addrLat" jdbcType="DOUBLE" />
	    <result column="addr_lon" property="addrLon" jdbcType="DOUBLE" />
	    
	    <result column="paid_in" property="paidIn" jdbcType="DOUBLE" />
	    <result column="is_private" property="isPrivate" jdbcType="BOOLEAN" />
	    
   </resultMap>

  <resultMap id="membersMap" type="com.accountbook.model.Member" >
  		<id column="id" property="id" jdbcType="VARCHAR" />
	    <result column="account_id" property="accountId" jdbcType="VARCHAR" />
	    <result column="is_group" property="isGroup" jdbcType="BOOLEAN" />
	    <result column="member_id" property="memberId" jdbcType="VARCHAR" />
	    <result column="member_name" property="memberName" jdbcType="VARCHAR" />
	    <result column="member_icon" property="memberIcon" jdbcType="VARCHAR" />
	    <result column="rule_type" property="ruleType" jdbcType="INTEGER" />
	    <result column="rule_num" property="ruleNum" jdbcType="DOUBLE" />
	    <result column="money_for_self" property="moneyForSelf" jdbcType="DOUBLE" />
	    <result column="paid_in" property="paidIn" jdbcType="DOUBLE" />
	    <result column="should_pay" property="shouldPay" jdbcType="DOUBLE" />
	    <result column="parent_member_id" property="parentMemberId" jdbcType="DOUBLE" />
  </resultMap>
  
  <resultMap id="targetsMap" type="com.accountbook.model.PayTarget" >
  		<id column="id" property="id" jdbcType="VARCHAR" />
	    <result column="account_id" property="accountId" jdbcType="VARCHAR" />
	    <result column="paid_id" property="paidId" jdbcType="VARCHAR" />
	    <result column="receipt_id" property="receiptId" jdbcType="VARCHAR" />
	    <result column="money" property="money" jdbcType="DOUBLE" />
	    <result column="wait_paid_money" property="waitPaidMoney" jdbcType="DOUBLE" />
	    <result column="paid_status" property="paidStatus" jdbcType="TINYINT" />
	    <result column="receipt_status" property="receiptStatus" jdbcType="TINYINT" />
	    <result column="offset_count" property="offsetCount" jdbcType="INTEGER" />
  </resultMap>
  
  <resultMap id="offsetMap" type="com.accountbook.model.PayOffset" >
  		<id column="id" property="id" jdbcType="INTEGER" />
	    <result column="target_pay_id" property="targetPayId" jdbcType="VARCHAR" />
	    <result column="origin_pay_id" property="originPayId" jdbcType="VARCHAR" />
	    <result column="money" property="money" jdbcType="DOUBLE" />
  </resultMap>
  
  
  <resultMap id="summaryMap" type="com.accountbook.model.SummaryInfo" >
	    <result column="name" property="name" jdbcType="VARCHAR" />
	    <result column="number" property="number" jdbcType="DOUBLE" />
  </resultMap>
  
  
  
  <resultMap id="offsetsMap" type="com.accountbook.model.Offset" >
	    <result column="type" property="type" jdbcType="INTEGER" />
	    <result column="name" property="name" jdbcType="VARCHAR" />
	    <result column="paid_in" property="paidIn" jdbcType="DOUBLE" />
	    <result column="date_timestamp" property="dateTimestamp" jdbcType="TIMESTAMP" />
  		<result column="paid_icon" property="paidIcon" jdbcType="VARCHAR" />
  		<result column="receipt_icon" property="receiptIcon" jdbcType="VARCHAR" />
  		<result column="money" property="money" jdbcType="DOUBLE" />
  </resultMap>


	<!-- 插入 -->
	<insert id="insert" parameterType="com.accountbook.model.Account">
		insert into account values(#{id},#{userId},#{bookId},#{type},#{name},#{description},
		#{imgs},#{dateTimestamp,jdbcType=TIMESTAMP},#{createTimestamp,jdbcType=TIMESTAMP},#{addrName},#{addr},#{addrLat},#{addrLon},#{paidIn},#{isPrivate})
	</insert>
	
	<insert id="insertMember" parameterType="com.accountbook.model.Member">
		insert into account_member values(#{id},#{accountId},#{isGroup},#{memberId},#{memberName},#{memberIcon},#{ruleType},#{ruleNum},#{moneyForSelf},#{paidIn},#{shouldPay},#{parentMemberId})
	</insert>
	
	<insert id="insertPayTarget" parameterType="com.accountbook.model.PayTarget">
		insert into account_pay values(#{id},#{accountId},#{paidId},#{receiptId},#{money},#{waitPaidMoney},#{paidStatus},#{receiptStatus},#{offsetCount})
	</insert>
	
	<insert id="insertPayOffset" parameterType="com.accountbook.model.PayOffset">
		insert into account_pay_offset values(null,#{targetPayId},#{originPayId},#{money})
	</insert>
	
	
	<!-- 更新支付方案 -->
	<update id="updatePayTarget" parameterType="com.accountbook.model.PayTarget">
		update account_pay set wait_paid_money=#{waitPaidMoney},paid_status=#{paidStatus},receipt_status=#{receiptStatus},offset_count=#{offsetCount} where id=#{id}
	</update>
	
	<!-- 删除一个账单下的所有支付方案 -->
	<delete id="deletePayTargets" parameterType="String">
		delete from account_pay where account_id=#{accountId};
	</delete>
	<!-- 删除某个支付方案 -->
	<delete id="deletePayTarget" parameterType="String">
		delete from account_pay where id=#{targetId};
	</delete>
	
	<!-- 删除某个成员 -->
	<delete id="deleteMember" parameterType="String">
		delete from account_member where id=#{id};
	</delete>
	
	
	
	
	<select id="queryAccount" parameterType="String" resultMap="accountMap">
		select * from account where id=#{accountId}
	</select>
	
	
	<select id="queryMyAccounts" parameterType="map" resultMap="accountMap">
	
		#查询自己记录或者涉及到自己的账单(所有账本)
		SELECT * FROM account WHERE 
		id IN(SELECT DISTINCT account_id FROM account_member WHERE member_id=#{userId}) 
		OR user_id=#{userId} ORDER BY date_timestamp desc,create_timestamp desc limit #{ls},#{lc}
		
	</select>
	<select id="queryMyAccountsByBookId" parameterType="map" resultMap="accountMap">
	
		#查询自己记录或者涉及到自己的账单(某个账本)
		SELECT * FROM account WHERE book_id=#{bookId} AND (
		id IN(SELECT DISTINCT account_id FROM account_member WHERE member_id=#{userId}) 
		OR user_id=#{userId} ) ORDER BY date_timestamp desc,create_timestamp desc limit #{ls},#{lc}
	
	</select>
	
	<select id="queryTwoPersonAccounts" parameterType="map" resultMap="accountMap">
	
		#查询两个人参与的账单
		SELECT * FROM account AS a LEFT JOIN account_member AS am ON a.id=am.account_id WHERE a.id IN(
		SELECT a.id FROM account AS a LEFT JOIN account_member AS am ON a.id=am.account_id WHERE member_id =#{user1Id}
		) AND member_id=#{user2Id} ORDER BY date_timestamp desc,create_timestamp desc limit #{ls},#{lc}
	
	</select>
	
	
	<select id="queryMembersByAccountId" parameterType="String" resultMap="membersMap">
		SELECT * FROM account_member WHERE account_id=#{accountId} ORDER BY CONVERT(member_name USING gbk) ASC
	</select>
	<select id="queryPayTarget" parameterType="String" resultMap="targetsMap">
		SELECT * from account_pay where id=#{targetId}
	</select>
	<select id="queryOffsetMoney" parameterType="String" resultType="double">
		SELECT IFNULL(SUM(money),0) FROM account_pay_offset WHERE target_pay_id=#{targetId} OR origin_pay_id=#{targetId}
	</select>
	<select id="queryPayTargetByAccountId" parameterType="String" resultMap="targetsMap">
		SELECT a.id,account_id,paid_id,receipt_id,money,wait_paid_money,paid_status,receipt_status,a.offset_count,CONCAT(IFNULL(c.nickname,''),'',IFNULL(b.name,''))  AS member_name FROM account_pay AS a 
		LEFT JOIN group_ AS b ON a.paid_id=b.id    
		LEFT JOIN USER AS c ON a.paid_id=c.id WHERE a.account_id=#{accountId} ORDER BY CONVERT(member_name USING gbk) asc
	</select>
	
	
	

  
  
	<select id="queryMembers" parameterType="String" resultMap="membersMap">
		SELECT id as member_id,name AS member_name,icon as member_icon,TRUE is_group FROM group_ WHERE admin_id=#{userId} OR id IN 
		(SELECT member_id FROM account_member WHERE is_group=TRUE AND account_id IN (
		SELECT account_id FROM account_member WHERE member_id=#{userId} OR 
		member_id IN (SELECT group_id FROM group_user WHERE user_id=#{userId} UNION 
		SELECT id FROM group_ WHERE admin_id=#{userId})))
		
		UNION
		
		SELECT id as member_id,nickname AS member_name,icon as member_icon,FALSE is_group FROM USER WHERE id IN(
		SELECT accept_id AS id FROM friend WHERE invite_id=#{userId}
		UNION
		SELECT invite_id AS id FROM friend WHERE accept_id=#{userId})
	</select>
	
	
	<select id="queryAccountSummary" parameterType="String" resultMap="summaryMap">
		
		#查询所有待付款
		SELECT 'wait_paid' name,SUM(wait_paid_money) AS number FROM account_pay AS a LEFT JOIN account AS b ON a.account_id=b.id WHERE a.wait_paid_money>0 AND a.paid_id=#{userId}
		
		UNION
		
		#查询所有待收款
		SELECT 'wait_receipt' name,SUM(wait_paid_money) AS number FROM account_pay AS a LEFT JOIN account AS b ON a.account_id=b.id WHERE a.wait_paid_money>0 AND a.receipt_id=#{userId}
	
		UNION
		
		#查询当月总支出
		SELECT 'month_paidin' name,SUM(money) AS number FROM (
		SELECT SUM(paid_in) AS money FROM account WHERE is_private=1 AND user_id=#{userId} AND DATE_FORMAT(NOW(),'%Y-%m')=DATE_FORMAT(date_timestamp,'%Y-%m')
		UNION
		SELECT SUM(a.should_pay) AS money FROM account_member AS a LEFT JOIN account AS b ON  a.account_id=b.id WHERE member_id=#{userId} AND DATE_FORMAT(NOW(),'%Y-%m')=DATE_FORMAT(b.date_timestamp,'%Y-%m'))AS total
		
		UNION
	
		#查询所有待完善的账单
		SELECT 'wait_edit' name,COUNT(*) AS number FROM account_pay AS a LEFT JOIN account AS b ON a.account_id=b.id 
		WHERE (a.paid_id IN (SELECT group_id FROM group_user WHERE user_id=#{userId}) AND a.paid_status=1)
		OR
		(a.receipt_id IN (SELECT group_id FROM group_user WHERE user_id=#{userId}) AND a.receipt_status=1)
	</select>
	
	
	<select id="queryAccountSummary2P" parameterType="map" resultMap="summaryMap">
	
		#查询所有待付款(指定另一个人)
		SELECT 'wait_paid' NAME,p.number-r.number AS number FROM(SELECT 0 id, IFNULL(SUM(wait_paid_money),0) AS number FROM account_pay AS a
		WHERE wait_paid_money>0 AND a.paid_id='oCBrx0FreB-L8pIQM5_RYDGoWOKQ' AND a.receipt_id='oCBrx0FreB-L8pIQM5_RYDGoWOJJ') p LEFT JOIN 
		(SELECT 0 id,IFNULL(SUM(wait_paid_money),0) AS number FROM account_pay AS a 
		WHERE wait_paid_money>0 AND a.paid_id='oCBrx0FreB-L8pIQM5_RYDGoWOJJ' AND a.receipt_id='oCBrx0FreB-L8pIQM5_RYDGoWOKQ') r ON p.id=r.id

				
		UNION		
				
				
		#查询两个人的月支出(自己和一个朋友)
		SELECT 'month_paidin' NAME,SUM(should_pay) AS number FROM account_member WHERE account_id IN
		(
		SELECT a.id FROM account AS a LEFT JOIN account_member AS am ON a.id=am.account_id WHERE a.id IN(
		SELECT a.id FROM account AS a LEFT JOIN account_member AS am ON a.id=am.account_id WHERE member_id =#{user1Id}
		) AND member_id=#{user2Id} AND DATE_FORMAT(NOW(),'%Y-%m')=DATE_FORMAT(a.date_timestamp,'%Y-%m')
		)
		AND member_id IN(#{user1Id},#{user2Id})
		
		UNION
		
		#查询两个人的总支出(自己和一个朋友)
		SELECT 'paidin' NAME,SUM(should_pay) AS number FROM account_member WHERE account_id IN
		(
		SELECT a.id FROM account AS a LEFT JOIN account_member AS am ON a.id=am.account_id WHERE a.id IN(
		SELECT a.id FROM account AS a LEFT JOIN account_member AS am ON a.id=am.account_id WHERE member_id =#{user1Id}
		) AND member_id=#{user2Id}
		)
		AND member_id IN(#{user1Id},#{user2Id})
		
	</select>
	
	
	<select id="queryWaitPaidMoney" parameterType="map" resultType="double">
	
		#查询所有待付款(指定另一个人),抵消账单专用,会排除当前计算的target
		SELECT p.number-r.number AS number FROM(SELECT 0 id, IFNULL(SUM(wait_paid_money),0) AS number FROM account_pay AS a
		WHERE wait_paid_money>0 AND id!=#{targetId} AND a.paid_id=#{user1Id} AND a.receipt_id=#{user2Id}) p LEFT JOIN 
		(SELECT 0 id,IFNULL(SUM(wait_paid_money),0) AS number FROM account_pay AS a 
		WHERE wait_paid_money>0 AND id!=#{targetId} AND a.paid_id=#{user2Id} AND a.receipt_id=#{user1Id}) r ON p.id=r.id

		
	</select>
	
	<select id="queryEarliestNotSettledTarget" parameterType="map" resultMap="targetsMap">
	
		#查询最初始的一个待付大于0的PayTarget
		SELECT * FROM account_pay AS p LEFT JOIN account AS a ON p.account_id=a.id
		WHERE wait_paid_money>0 AND p.id!=#{targetId} AND p.paid_id=#{user1Id} AND p.receipt_id=#{user2Id} ORDER BY a.date_timestamp ASC LIMIT 0,1
		
	</select>
	
	<select id="queryOffsets" parameterType="string" resultMap="offsetsMap">
		#查询抵消记录列表
		SELECT c.type,c.name,c.paid_in,c.date_timestamp,d.icon AS paid_icon,e.icon AS receipt_icon,b.money FROM account_pay_offset AS a 
		LEFT JOIN account_pay AS b ON a.origin_pay_id=b.id 
		LEFT JOIN account AS c ON b.account_id=c.id
		LEFT JOIN USER AS d ON b.paid_id=d.id
		LEFT JOIN USER AS e ON b.receipt_id=e.id
		WHERE target_pay_id=#{targetId}
		
	</select>
	
	
</mapper>