<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.accountbook.dao.AccountDao" >

   <resultMap id="accountMap" type="com.accountbook.model.Account" >
	    <id column="id" property="id" jdbcType="VARCHAR" />
	    <result column="user_id" property="userId" jdbcType="VARCHAR" />
	    <result column="book_id" property="bookId" jdbcType="VARCHAR" />
	    <result column="type" property="type" jdbcType="VARCHAR" />
	    
	    <result column="name" property="name" jdbcType="VARCHAR" />
	    <result column="description" property="description" jdbcType="VARCHAR" />
	    <result column="imgs" property="imgs" jdbcType="VARCHAR" />
	    
	    <result column="date_timestamp" property="dateTimestamp" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp"/>
	    <result column="create_timestamp" property="createTimestamp" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp"/>
	    
	    <result column="addr_name" property="addrName" jdbcType="VARCHAR" />
	    <result column="addr" property="addr" jdbcType="VARCHAR" />
	    <result column="addr_lat" property="addrLat" jdbcType="DOUBLE" />
	    <result column="addr_lon" property="addrLon" jdbcType="DOUBLE" />
	    
	    <result column="paid_in" property="paidIn" jdbcType="DOUBLE" />
	    <result column="is_private" property="isPrivate" jdbcType="BOOLEAN" />
	    
   </resultMap>

  <resultMap id="membersMap" type="com.accountbook.model.Member" >
  		<id column="id" property="id" jdbcType="VARCHAR" />
	    <result column="account_id" property="accountId" jdbcType="VARCHAR" />
	    <result column="is_group" property="isGroup" jdbcType="BOOLEAN" />
	    <result column="member_id" property="memberId" jdbcType="VARCHAR" />
	    <result column="member_name" property="memberName" jdbcType="VARCHAR" />
	    <result column="member_icon" property="memberIcon" jdbcType="VARCHAR" />
	    <result column="rule_type" property="ruleType" jdbcType="INTEGER" />
	    <result column="rule_num" property="ruleNum" jdbcType="DOUBLE" />
	    <result column="money_for_self" property="moneyForSelf" jdbcType="DOUBLE" />
	    <result column="paid_in" property="paidIn" jdbcType="DOUBLE" />
	    <result column="should_pay" property="shouldPay" jdbcType="DOUBLE" />
	    <result column="parent_member_id" property="parentMemberId" jdbcType="DOUBLE" />
  </resultMap>
  
  <resultMap id="targetsMap" type="com.accountbook.model.PayTarget" >
  		<id column="id" property="id" jdbcType="VARCHAR" />
	    <result column="account_id" property="accountId" jdbcType="VARCHAR" />
	    <result column="paid_id" property="paidId" jdbcType="VARCHAR" />
	    <result column="receipt_id" property="receiptId" jdbcType="VARCHAR" />
	    <result column="money" property="money" jdbcType="DOUBLE" />
	    <result column="settled" property="settled" jdbcType="BOOLEAN" />
	    <result column="paid_status" property="paidStatus" jdbcType="TINYINT" />
	    <result column="receipt_status" property="receiptStatus" jdbcType="TINYINT" />
  </resultMap>
  
  
  <resultMap id="summaryMap" type="com.accountbook.model.SummaryInfo" >
	    <result column="name" property="name" jdbcType="VARCHAR" />
	    <result column="money" property="money" jdbcType="DOUBLE" />
  </resultMap>


	<!-- 插入 -->
	<insert id="insert" parameterType="com.accountbook.model.Account">
		insert into account values(#{id},#{userId},#{bookId},#{type},#{name},#{description},
		#{imgs},#{dateTimestamp,jdbcType=TIMESTAMP},#{createTimestamp,jdbcType=TIMESTAMP},#{addrName},#{addr},#{addrLat},#{addrLon},#{paidIn},#{isPrivate})
	</insert>
	
	<insert id="insertMember" parameterType="com.accountbook.model.Member">
		insert into account_member values(#{id},#{accountId},#{isGroup},#{memberId},#{memberName},#{memberIcon},#{ruleType},#{ruleNum},#{moneyForSelf},#{paidIn},#{shouldPay},#{parentMemberId})
	</insert>
	
	<insert id="insertPayTarget" parameterType="com.accountbook.model.PayTarget">
		insert into account_pay values(#{id},#{accountId},#{paidId},#{receiptId},#{money},#{settled},#{paidStatus},#{receiptStatus})
	</insert>
	
	
	<!-- 更新支付方案 -->
	<update id="updatePayTarget" parameterType="com.accountbook.model.PayTarget">
		update account_pay set settled=#{settled} where id=#{id}
	</update>
	
	<!-- 删除一个账单下的所有支付方案 -->
	<delete id="deletePayTargets" parameterType="String">
		delete from account_pay where account_id=#{accountId};
	</delete>
	<!-- 删除某个支付方案 -->
	<delete id="deletePayTarget" parameterType="String">
		delete from account_pay where id=#{targetId};
	</delete>
	
	<!-- 删除某个成员 -->
	<delete id="deleteMember" parameterType="String">
		delete from account_member where id=#{id};
	</delete>
	
	
	
	
	<select id="queryAccount" parameterType="String" resultMap="accountMap">
		select * from account where id=#{accountId}
	</select>
	
	
	<select id="queryAccountsByUserIdAndBookId" parameterType="String" resultMap="accountMap">
		select * from account where user_id=#{userId} and book_id=#{bookId} ORDER BY date_timestamp desc,create_timestamp desc
	</select>
	<select id="queryMembersByAccountId" parameterType="String" resultMap="membersMap">
		SELECT * FROM account_member WHERE account_id=#{accountId} ORDER BY CONVERT(member_name USING gbk) ASC
	</select>
	<select id="queryPayTarget" parameterType="String" resultMap="targetsMap">
		SELECT * from account_pay where id=#{targetId}
	</select>
	<select id="queryPayTargetByAccountId" parameterType="String" resultMap="targetsMap">
		SELECT a.id,account_id,paid_id,receipt_id,money,settled,paid_status,receipt_status,CONCAT(IFNULL(c.nickname,''),'',IFNULL(b.name,''))  AS member_name FROM account_pay AS a 
		LEFT JOIN group_ AS b ON a.paid_id=b.id    
		LEFT JOIN USER AS c ON a.paid_id=c.id WHERE a.account_id=#{accountId} ORDER BY CONVERT(member_name USING gbk) asc
	</select>
	
	
	

  
  
	<select id="queryMembers" parameterType="String" resultMap="membersMap">
		SELECT id as member_id,name AS member_name,icon as member_icon,TRUE is_group FROM group_ WHERE admin_id=#{userId} OR id IN 
		(SELECT member_id FROM account_member WHERE is_group=TRUE AND account_id IN (
		SELECT account_id FROM account_member WHERE member_id=#{userId} OR 
		member_id IN (SELECT group_id FROM group_user WHERE user_id=#{userId} UNION 
		SELECT id FROM group_ WHERE admin_id=#{userId})))
		
		UNION
		
		SELECT id as member_id,nickname AS member_name,icon as member_icon,FALSE is_group FROM USER WHERE id IN(
		SELECT accept_id AS id FROM friend WHERE invite_id=#{userId}
		UNION
		SELECT invite_id AS id FROM friend WHERE accept_id=#{userId})
	</select>
	
	
	<select id="queryAccountSummarySimple" parameterType="String" resultMap="summaryMap">
		#查询当月总支出
		SELECT 'month_paidin' name,SUM(money) AS money FROM (
		SELECT SUM(paid_in) AS money FROM account WHERE is_private=1 AND user_id=#{userId} AND DATE_FORMAT(NOW(),'%Y-%m')=DATE_FORMAT(date_timestamp,'%Y-%m')
		UNION
		SELECT SUM(a.should_pay) AS money FROM account_member AS a LEFT JOIN account AS b ON  a.account_id=b.id WHERE member_id=#{userId} AND DATE_FORMAT(NOW(),'%Y-%m')=DATE_FORMAT(b.date_timestamp,'%Y-%m'))AS total
		
		UNION
		
		#查询所有待付款
		SELECT 'wait_paid' name,SUM(money) FROM account_pay AS a LEFT JOIN account AS b ON a.account_id=b.id WHERE a.paid_id=#{userId}
		
		UNION
		
		#查询所有待收款
		SELECT 'wait_receipt' name,SUM(money) FROM account_pay AS a LEFT JOIN account AS b ON a.account_id=b.id WHERE a.receipt_id=#{userId}
	</select>
	
	
	
	
</mapper>